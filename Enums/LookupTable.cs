//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using AutoMapper;

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;
using Services.Db;
using Services.Dto;
using Services.Dto.internals;
using Services.Dto.Security;
using Services.Enums;
using Services.Models;
using Services.Schema;

using ServiceStack;
using ServiceStack.Text;

using Typed;
using Typed.Bindings;
using Typed.Notifications;
using Typed.Settings;

using Xtensive.Orm;
using Xtensive.Orm.Model;

using Attribute = Services.Dto.Attribute;
using ValueType = Services.Dto.ValueType;
using Version = Services.Dto.Version;

namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum LookupTableEnm
    {
        [EnumMember(Value = DocConstantLookupTable.AMPERSONCOUNT)]
        AMPERSONCOUNT,
        [EnumMember(Value = DocConstantLookupTable.APP)]
        APP,
        [EnumMember(Value = DocConstantLookupTable.ARMPOPULATIONAGE)]
        ARMPOPULATIONAGE,
        [EnumMember(Value = DocConstantLookupTable.ARMPOPULATIONN)]
        ARMPOPULATIONN,
        [EnumMember(Value = DocConstantLookupTable.ASSOCIATIONMEASURE)]
        ASSOCIATIONMEASURE,
        [EnumMember(Value = DocConstantLookupTable.ATTRIBUTECATEGORY)]
        ATTRIBUTECATEGORY,
        [EnumMember(Value = DocConstantLookupTable.ATTRIBUTETYPE)]
        ATTRIBUTETYPE,
        [EnumMember(Value = DocConstantLookupTable.BROADCASTSTATUS)]
        BROADCASTSTATUS,
        [EnumMember(Value = DocConstantLookupTable.BROADCASTTYPE)]
        BROADCASTTYPE,
        [EnumMember(Value = DocConstantLookupTable.CONFIDENCEINTERVAL)]
        CONFIDENCEINTERVAL,
        [EnumMember(Value = DocConstantLookupTable.CONJUNCTION)]
        CONJUNCTION,
        [EnumMember(Value = DocConstantLookupTable.DATABASETYPE)]
        DATABASETYPE,
        [EnumMember(Value = DocConstantLookupTable.DATAHUBSEARCHCATEGORY)]
        DATAHUBSEARCHCATEGORY,
        [EnumMember(Value = DocConstantLookupTable.DATAHUBSOURCE)]
        DATAHUBSOURCE,
        [EnumMember(Value = DocConstantLookupTable.DEFAULTTIMEUNIT)]
        DEFAULTTIMEUNIT,
        [EnumMember(Value = DocConstantLookupTable.DEFAULTUNITTYPE)]
        DEFAULTUNITTYPE,
        [EnumMember(Value = DocConstantLookupTable.DIRECTIONALITY)]
        DIRECTIONALITY,
        [EnumMember(Value = DocConstantLookupTable.DOCUMENTSETTYPE)]
        DOCUMENTSETTYPE,
        [EnumMember(Value = DocConstantLookupTable.DOCUMENTTYPE)]
        DOCUMENTTYPE,
        [EnumMember(Value = DocConstantLookupTable.DOSAGEPROTOCOL)]
        DOSAGEPROTOCOL,
        [EnumMember(Value = DocConstantLookupTable.DOSAGETYPE)]
        DOSAGETYPE,
        [EnumMember(Value = DocConstantLookupTable.EQUALITYOPERATOR)]
        EQUALITYOPERATOR,
        [EnumMember(Value = DocConstantLookupTable.ERRORMESSAGE)]
        ERRORMESSAGE,
        [EnumMember(Value = DocConstantLookupTable.EXTERNALKEY)]
        EXTERNALKEY,
        [EnumMember(Value = DocConstantLookupTable.FEATURE)]
        FEATURE,
        [EnumMember(Value = DocConstantLookupTable.FIELDTYPE)]
        FIELDTYPE,
        [EnumMember(Value = DocConstantLookupTable.FOREIGNKEYSTATUS)]
        FOREIGNKEYSTATUS,
        [EnumMember(Value = DocConstantLookupTable.FQREFERENCESTATUS)]
        FQREFERENCESTATUS,
        [EnumMember(Value = DocConstantLookupTable.HELP)]
        HELP,
        [EnumMember(Value = DocConstantLookupTable.IMPORTSTATUS)]
        IMPORTSTATUS,
        [EnumMember(Value = DocConstantLookupTable.INCIDENCERATETYPE)]
        INCIDENCERATETYPE,
        [EnumMember(Value = DocConstantLookupTable.INSTITUTIONTYPE)]
        INSTITUTIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.INTEGRATIONNAME)]
        INTEGRATIONNAME,
        [EnumMember(Value = DocConstantLookupTable.INTEGRATIONPROPERTYNAME)]
        INTEGRATIONPROPERTYNAME,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONLINEOFTREATMENT)]
        INTERVENTIONLINEOFTREATMENT,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONMEDIUM)]
        INTERVENTIONMEDIUM,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONPROVIDER)]
        INTERVENTIONPROVIDER,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONROUTE)]
        INTERVENTIONROUTE,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONSCHEDULE)]
        INTERVENTIONSCHEDULE,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONSTAGESETTING)]
        INTERVENTIONSTAGESETTING,
        [EnumMember(Value = DocConstantLookupTable.INTERVENTIONTYPE)]
        INTERVENTIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.JOB)]
        JOB,
        [EnumMember(Value = DocConstantLookupTable.JUNCTIONTYPE)]
        JUNCTIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.LOOKUPTABLE)]
        LOOKUPTABLE,
        [EnumMember(Value = DocConstantLookupTable.LOOKUPTYPE)]
        LOOKUPTYPE,
        [EnumMember(Value = DocConstantLookupTable.MANUALIZEDTREATMENT)]
        MANUALIZEDTREATMENT,
        [EnumMember(Value = DocConstantLookupTable.MEANCALCULATIONTYPE)]
        MEANCALCULATIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.MEANRANGETYPE)]
        MEANRANGETYPE,
        [EnumMember(Value = DocConstantLookupTable.MEANVARIABLETYPE)]
        MEANVARIABLETYPE,
        [EnumMember(Value = DocConstantLookupTable.MEANVARIANCETYPE)]
        MEANVARIANCETYPE,
        [EnumMember(Value = DocConstantLookupTable.METHODOFANALYSIS)]
        METHODOFANALYSIS,
        [EnumMember(Value = DocConstantLookupTable.MODELNAME)]
        MODELNAME,
        [EnumMember(Value = DocConstantLookupTable.OUTCOMECATEGORY)]
        OUTCOMECATEGORY,
        [EnumMember(Value = DocConstantLookupTable.OUTCOMETYPE)]
        OUTCOMETYPE,
        [EnumMember(Value = DocConstantLookupTable.PERMISSION)]
        PERMISSION,
        [EnumMember(Value = DocConstantLookupTable.POPULATIONTYPE)]
        POPULATIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.PREVALENCETYPE)]
        PREVALENCETYPE,
        [EnumMember(Value = DocConstantLookupTable.PROTOCOLFILTEROWNER)]
        PROTOCOLFILTEROWNER,
        [EnumMember(Value = DocConstantLookupTable.PROTOCOLFILTERTYPE)]
        PROTOCOLFILTERTYPE,
        [EnumMember(Value = DocConstantLookupTable.PROTOCOLTYPE)]
        PROTOCOLTYPE,
        [EnumMember(Value = DocConstantLookupTable.PUBLICATIONPOOLSTUDIES)]
        PUBLICATIONPOOLSTUDIES,
        [EnumMember(Value = DocConstantLookupTable.PUBTYPE)]
        PUBTYPE,
        [EnumMember(Value = DocConstantLookupTable.QUESTION)]
        QUESTION,
        [EnumMember(Value = DocConstantLookupTable.QUESTIONCATEGORY)]
        QUESTIONCATEGORY,
        [EnumMember(Value = DocConstantLookupTable.QUESTIONTYPE)]
        QUESTIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.QUEUECHANNEL)]
        QUEUECHANNEL,
        [EnumMember(Value = DocConstantLookupTable.RANDOMIZATION)]
        RANDOMIZATION,
        [EnumMember(Value = DocConstantLookupTable.RANGETYPE)]
        RANGETYPE,
        [EnumMember(Value = DocConstantLookupTable.RATING)]
        RATING,
        [EnumMember(Value = DocConstantLookupTable.REASONREJECTED)]
        REASONREJECTED,
        [EnumMember(Value = DocConstantLookupTable.RECRUITMENTMETHOD)]
        RECRUITMENTMETHOD,
        [EnumMember(Value = DocConstantLookupTable.REPRESENTATIVESAMPLE)]
        REPRESENTATIVESAMPLE,
        [EnumMember(Value = DocConstantLookupTable.RESPONSESCOLLECTEDBY)]
        RESPONSESCOLLECTEDBY,
        [EnumMember(Value = DocConstantLookupTable.RESULTSCATEGORY)]
        RESULTSCATEGORY,
        [EnumMember(Value = DocConstantLookupTable.RISKOFBIASASSESSMENT)]
        RISKOFBIASASSESSMENT,
        [EnumMember(Value = DocConstantLookupTable.SCOPE)]
        SCOPE,
        [EnumMember(Value = DocConstantLookupTable.SETTINGTYPE)]
        SETTINGTYPE,
        [EnumMember(Value = DocConstantLookupTable.STATISTICALSIGNIFICANCE)]
        STATISTICALSIGNIFICANCE,
        [EnumMember(Value = DocConstantLookupTable.STATISTICALTEST)]
        STATISTICALTEST,
        [EnumMember(Value = DocConstantLookupTable.STATSRECORDNAME)]
        STATSRECORDNAME,
        [EnumMember(Value = DocConstantLookupTable.STATUS)]
        STATUS,
        [EnumMember(Value = DocConstantLookupTable.STRATIFICATIONTYPE)]
        STRATIFICATIONTYPE,
        [EnumMember(Value = DocConstantLookupTable.STUDYALLOCATTIONMETHOD)]
        STUDYALLOCATTIONMETHOD,
        [EnumMember(Value = DocConstantLookupTable.STUDYBIAS)]
        STUDYBIAS,
        [EnumMember(Value = DocConstantLookupTable.STUDYBLINDINGMETHOD)]
        STUDYBLINDINGMETHOD,
        [EnumMember(Value = DocConstantLookupTable.STUDYCOMPLIANCE)]
        STUDYCOMPLIANCE,
        [EnumMember(Value = DocConstantLookupTable.STUDYDESIGN)]
        STUDYDESIGN,
        [EnumMember(Value = DocConstantLookupTable.STUDYDOCUMENTTYPE)]
        STUDYDOCUMENTTYPE,
        [EnumMember(Value = DocConstantLookupTable.STUDYFUNDING)]
        STUDYFUNDING,
        [EnumMember(Value = DocConstantLookupTable.STUDYGROUPTYPE)]
        STUDYGROUPTYPE,
        [EnumMember(Value = DocConstantLookupTable.STUDYIMPORTLOCATION)]
        STUDYIMPORTLOCATION,
        [EnumMember(Value = DocConstantLookupTable.STUDYIMPORTTYPE)]
        STUDYIMPORTTYPE,
        [EnumMember(Value = DocConstantLookupTable.STUDYNGA)]
        STUDYNGA,
        [EnumMember(Value = DocConstantLookupTable.STUDYOBJECTIVE)]
        STUDYOBJECTIVE,
        [EnumMember(Value = DocConstantLookupTable.STUDYPHASENAMES)]
        STUDYPHASENAMES,
        [EnumMember(Value = DocConstantLookupTable.STUDYPURPOSE)]
        STUDYPURPOSE,
        [EnumMember(Value = DocConstantLookupTable.STUDYRANDOMIZATIONMETHOD)]
        STUDYRANDOMIZATIONMETHOD,
        [EnumMember(Value = DocConstantLookupTable.STUDYTYPE)]
        STUDYTYPE,
        [EnumMember(Value = DocConstantLookupTable.STUDYTYPEHARMETIOLOGY)]
        STUDYTYPEHARMETIOLOGY,
        [EnumMember(Value = DocConstantLookupTable.STUDYTYPETHERAPY)]
        STUDYTYPETHERAPY,
        [EnumMember(Value = DocConstantLookupTable.STUDYYEARS)]
        STUDYYEARS,
        [EnumMember(Value = DocConstantLookupTable.TERMCLASSIFICATION)]
        TERMCLASSIFICATION,
        [EnumMember(Value = DocConstantLookupTable.TERMSECTION)]
        TERMSECTION,
        [EnumMember(Value = DocConstantLookupTable.TIMECARDSTATUS)]
        TIMECARDSTATUS,
        [EnumMember(Value = DocConstantLookupTable.TIMEPOINTTYPE)]
        TIMEPOINTTYPE,
        [EnumMember(Value = DocConstantLookupTable.UNITSOFMEASURE)]
        UNITSOFMEASURE,
        [EnumMember(Value = DocConstantLookupTable.UNITTYPE)]
        UNITTYPE,
        [EnumMember(Value = DocConstantLookupTable.USEREMPLOYEETYPE)]
        USEREMPLOYEETYPE,
        [EnumMember(Value = DocConstantLookupTable.USERPAYROLLSTATUS)]
        USERPAYROLLSTATUS,
        [EnumMember(Value = DocConstantLookupTable.USERPAYROLLTYPE)]
        USERPAYROLLTYPE,
        [EnumMember(Value = DocConstantLookupTable.USERTYPE)]
        USERTYPE,
        [EnumMember(Value = DocConstantLookupTable.VALUESTATUS)]
        VALUESTATUS,
        [EnumMember(Value = DocConstantLookupTable.VALUETYPE)]
        VALUETYPE,
        [EnumMember(Value = DocConstantLookupTable.VARIABLERULE)]
        VARIABLERULE,
        [EnumMember(Value = DocConstantLookupTable.VARIABLETYPE)]
        VARIABLETYPE,
        [EnumMember(Value = DocConstantLookupTable.WORKFLOW)]
        WORKFLOW,
        [EnumMember(Value = DocConstantLookupTable.WORKFLOWSTATUS)]
        WORKFLOWSTATUS,
        [EnumMember(Value = DocConstantLookupTable.WORKFLOWTASKTYPE)]
        WORKFLOWTASKTYPE,
        [EnumMember(Value = DocConstantLookupTable.YESNONA)]
        YESNONA
    }
    
    public static partial class EnumExtensions
    {
        public static string ToEnumString(this LookupTableEnm instance)
        {
            switch(instance) 
            {
                case LookupTableEnm.AMPERSONCOUNT:
                    return DocConstantLookupTable.AMPERSONCOUNT;
                case LookupTableEnm.APP:
                    return DocConstantLookupTable.APP;
                case LookupTableEnm.ARMPOPULATIONAGE:
                    return DocConstantLookupTable.ARMPOPULATIONAGE;
                case LookupTableEnm.ARMPOPULATIONN:
                    return DocConstantLookupTable.ARMPOPULATIONN;
                case LookupTableEnm.ASSOCIATIONMEASURE:
                    return DocConstantLookupTable.ASSOCIATIONMEASURE;
                case LookupTableEnm.ATTRIBUTECATEGORY:
                    return DocConstantLookupTable.ATTRIBUTECATEGORY;
                case LookupTableEnm.ATTRIBUTETYPE:
                    return DocConstantLookupTable.ATTRIBUTETYPE;
                case LookupTableEnm.BROADCASTSTATUS:
                    return DocConstantLookupTable.BROADCASTSTATUS;
                case LookupTableEnm.BROADCASTTYPE:
                    return DocConstantLookupTable.BROADCASTTYPE;
                case LookupTableEnm.CONFIDENCEINTERVAL:
                    return DocConstantLookupTable.CONFIDENCEINTERVAL;
                case LookupTableEnm.CONJUNCTION:
                    return DocConstantLookupTable.CONJUNCTION;
                case LookupTableEnm.DATABASETYPE:
                    return DocConstantLookupTable.DATABASETYPE;
                case LookupTableEnm.DATAHUBSEARCHCATEGORY:
                    return DocConstantLookupTable.DATAHUBSEARCHCATEGORY;
                case LookupTableEnm.DATAHUBSOURCE:
                    return DocConstantLookupTable.DATAHUBSOURCE;
                case LookupTableEnm.DEFAULTTIMEUNIT:
                    return DocConstantLookupTable.DEFAULTTIMEUNIT;
                case LookupTableEnm.DEFAULTUNITTYPE:
                    return DocConstantLookupTable.DEFAULTUNITTYPE;
                case LookupTableEnm.DIRECTIONALITY:
                    return DocConstantLookupTable.DIRECTIONALITY;
                case LookupTableEnm.DOCUMENTSETTYPE:
                    return DocConstantLookupTable.DOCUMENTSETTYPE;
                case LookupTableEnm.DOCUMENTTYPE:
                    return DocConstantLookupTable.DOCUMENTTYPE;
                case LookupTableEnm.DOSAGEPROTOCOL:
                    return DocConstantLookupTable.DOSAGEPROTOCOL;
                case LookupTableEnm.DOSAGETYPE:
                    return DocConstantLookupTable.DOSAGETYPE;
                case LookupTableEnm.EQUALITYOPERATOR:
                    return DocConstantLookupTable.EQUALITYOPERATOR;
                case LookupTableEnm.ERRORMESSAGE:
                    return DocConstantLookupTable.ERRORMESSAGE;
                case LookupTableEnm.EXTERNALKEY:
                    return DocConstantLookupTable.EXTERNALKEY;
                case LookupTableEnm.FEATURE:
                    return DocConstantLookupTable.FEATURE;
                case LookupTableEnm.FIELDTYPE:
                    return DocConstantLookupTable.FIELDTYPE;
                case LookupTableEnm.FOREIGNKEYSTATUS:
                    return DocConstantLookupTable.FOREIGNKEYSTATUS;
                case LookupTableEnm.FQREFERENCESTATUS:
                    return DocConstantLookupTable.FQREFERENCESTATUS;
                case LookupTableEnm.HELP:
                    return DocConstantLookupTable.HELP;
                case LookupTableEnm.IMPORTSTATUS:
                    return DocConstantLookupTable.IMPORTSTATUS;
                case LookupTableEnm.INCIDENCERATETYPE:
                    return DocConstantLookupTable.INCIDENCERATETYPE;
                case LookupTableEnm.INSTITUTIONTYPE:
                    return DocConstantLookupTable.INSTITUTIONTYPE;
                case LookupTableEnm.INTEGRATIONNAME:
                    return DocConstantLookupTable.INTEGRATIONNAME;
                case LookupTableEnm.INTEGRATIONPROPERTYNAME:
                    return DocConstantLookupTable.INTEGRATIONPROPERTYNAME;
                case LookupTableEnm.INTERVENTIONLINEOFTREATMENT:
                    return DocConstantLookupTable.INTERVENTIONLINEOFTREATMENT;
                case LookupTableEnm.INTERVENTIONMEDIUM:
                    return DocConstantLookupTable.INTERVENTIONMEDIUM;
                case LookupTableEnm.INTERVENTIONPROVIDER:
                    return DocConstantLookupTable.INTERVENTIONPROVIDER;
                case LookupTableEnm.INTERVENTIONROUTE:
                    return DocConstantLookupTable.INTERVENTIONROUTE;
                case LookupTableEnm.INTERVENTIONSCHEDULE:
                    return DocConstantLookupTable.INTERVENTIONSCHEDULE;
                case LookupTableEnm.INTERVENTIONSTAGESETTING:
                    return DocConstantLookupTable.INTERVENTIONSTAGESETTING;
                case LookupTableEnm.INTERVENTIONTYPE:
                    return DocConstantLookupTable.INTERVENTIONTYPE;
                case LookupTableEnm.JOB:
                    return DocConstantLookupTable.JOB;
                case LookupTableEnm.JUNCTIONTYPE:
                    return DocConstantLookupTable.JUNCTIONTYPE;
                case LookupTableEnm.LOOKUPTABLE:
                    return DocConstantLookupTable.LOOKUPTABLE;
                case LookupTableEnm.LOOKUPTYPE:
                    return DocConstantLookupTable.LOOKUPTYPE;
                case LookupTableEnm.MANUALIZEDTREATMENT:
                    return DocConstantLookupTable.MANUALIZEDTREATMENT;
                case LookupTableEnm.MEANCALCULATIONTYPE:
                    return DocConstantLookupTable.MEANCALCULATIONTYPE;
                case LookupTableEnm.MEANRANGETYPE:
                    return DocConstantLookupTable.MEANRANGETYPE;
                case LookupTableEnm.MEANVARIABLETYPE:
                    return DocConstantLookupTable.MEANVARIABLETYPE;
                case LookupTableEnm.MEANVARIANCETYPE:
                    return DocConstantLookupTable.MEANVARIANCETYPE;
                case LookupTableEnm.METHODOFANALYSIS:
                    return DocConstantLookupTable.METHODOFANALYSIS;
                case LookupTableEnm.MODELNAME:
                    return DocConstantLookupTable.MODELNAME;
                case LookupTableEnm.OUTCOMECATEGORY:
                    return DocConstantLookupTable.OUTCOMECATEGORY;
                case LookupTableEnm.OUTCOMETYPE:
                    return DocConstantLookupTable.OUTCOMETYPE;
                case LookupTableEnm.PERMISSION:
                    return DocConstantLookupTable.PERMISSION;
                case LookupTableEnm.POPULATIONTYPE:
                    return DocConstantLookupTable.POPULATIONTYPE;
                case LookupTableEnm.PREVALENCETYPE:
                    return DocConstantLookupTable.PREVALENCETYPE;
                case LookupTableEnm.PROTOCOLFILTEROWNER:
                    return DocConstantLookupTable.PROTOCOLFILTEROWNER;
                case LookupTableEnm.PROTOCOLFILTERTYPE:
                    return DocConstantLookupTable.PROTOCOLFILTERTYPE;
                case LookupTableEnm.PROTOCOLTYPE:
                    return DocConstantLookupTable.PROTOCOLTYPE;
                case LookupTableEnm.PUBLICATIONPOOLSTUDIES:
                    return DocConstantLookupTable.PUBLICATIONPOOLSTUDIES;
                case LookupTableEnm.PUBTYPE:
                    return DocConstantLookupTable.PUBTYPE;
                case LookupTableEnm.QUESTION:
                    return DocConstantLookupTable.QUESTION;
                case LookupTableEnm.QUESTIONCATEGORY:
                    return DocConstantLookupTable.QUESTIONCATEGORY;
                case LookupTableEnm.QUESTIONTYPE:
                    return DocConstantLookupTable.QUESTIONTYPE;
                case LookupTableEnm.QUEUECHANNEL:
                    return DocConstantLookupTable.QUEUECHANNEL;
                case LookupTableEnm.RANDOMIZATION:
                    return DocConstantLookupTable.RANDOMIZATION;
                case LookupTableEnm.RANGETYPE:
                    return DocConstantLookupTable.RANGETYPE;
                case LookupTableEnm.RATING:
                    return DocConstantLookupTable.RATING;
                case LookupTableEnm.REASONREJECTED:
                    return DocConstantLookupTable.REASONREJECTED;
                case LookupTableEnm.RECRUITMENTMETHOD:
                    return DocConstantLookupTable.RECRUITMENTMETHOD;
                case LookupTableEnm.REPRESENTATIVESAMPLE:
                    return DocConstantLookupTable.REPRESENTATIVESAMPLE;
                case LookupTableEnm.RESPONSESCOLLECTEDBY:
                    return DocConstantLookupTable.RESPONSESCOLLECTEDBY;
                case LookupTableEnm.RESULTSCATEGORY:
                    return DocConstantLookupTable.RESULTSCATEGORY;
                case LookupTableEnm.RISKOFBIASASSESSMENT:
                    return DocConstantLookupTable.RISKOFBIASASSESSMENT;
                case LookupTableEnm.SCOPE:
                    return DocConstantLookupTable.SCOPE;
                case LookupTableEnm.SETTINGTYPE:
                    return DocConstantLookupTable.SETTINGTYPE;
                case LookupTableEnm.STATISTICALSIGNIFICANCE:
                    return DocConstantLookupTable.STATISTICALSIGNIFICANCE;
                case LookupTableEnm.STATISTICALTEST:
                    return DocConstantLookupTable.STATISTICALTEST;
                case LookupTableEnm.STATSRECORDNAME:
                    return DocConstantLookupTable.STATSRECORDNAME;
                case LookupTableEnm.STATUS:
                    return DocConstantLookupTable.STATUS;
                case LookupTableEnm.STRATIFICATIONTYPE:
                    return DocConstantLookupTable.STRATIFICATIONTYPE;
                case LookupTableEnm.STUDYALLOCATTIONMETHOD:
                    return DocConstantLookupTable.STUDYALLOCATTIONMETHOD;
                case LookupTableEnm.STUDYBIAS:
                    return DocConstantLookupTable.STUDYBIAS;
                case LookupTableEnm.STUDYBLINDINGMETHOD:
                    return DocConstantLookupTable.STUDYBLINDINGMETHOD;
                case LookupTableEnm.STUDYCOMPLIANCE:
                    return DocConstantLookupTable.STUDYCOMPLIANCE;
                case LookupTableEnm.STUDYDESIGN:
                    return DocConstantLookupTable.STUDYDESIGN;
                case LookupTableEnm.STUDYDOCUMENTTYPE:
                    return DocConstantLookupTable.STUDYDOCUMENTTYPE;
                case LookupTableEnm.STUDYFUNDING:
                    return DocConstantLookupTable.STUDYFUNDING;
                case LookupTableEnm.STUDYGROUPTYPE:
                    return DocConstantLookupTable.STUDYGROUPTYPE;
                case LookupTableEnm.STUDYIMPORTLOCATION:
                    return DocConstantLookupTable.STUDYIMPORTLOCATION;
                case LookupTableEnm.STUDYIMPORTTYPE:
                    return DocConstantLookupTable.STUDYIMPORTTYPE;
                case LookupTableEnm.STUDYNGA:
                    return DocConstantLookupTable.STUDYNGA;
                case LookupTableEnm.STUDYOBJECTIVE:
                    return DocConstantLookupTable.STUDYOBJECTIVE;
                case LookupTableEnm.STUDYPHASENAMES:
                    return DocConstantLookupTable.STUDYPHASENAMES;
                case LookupTableEnm.STUDYPURPOSE:
                    return DocConstantLookupTable.STUDYPURPOSE;
                case LookupTableEnm.STUDYRANDOMIZATIONMETHOD:
                    return DocConstantLookupTable.STUDYRANDOMIZATIONMETHOD;
                case LookupTableEnm.STUDYTYPE:
                    return DocConstantLookupTable.STUDYTYPE;
                case LookupTableEnm.STUDYTYPEHARMETIOLOGY:
                    return DocConstantLookupTable.STUDYTYPEHARMETIOLOGY;
                case LookupTableEnm.STUDYTYPETHERAPY:
                    return DocConstantLookupTable.STUDYTYPETHERAPY;
                case LookupTableEnm.STUDYYEARS:
                    return DocConstantLookupTable.STUDYYEARS;
                case LookupTableEnm.TERMCLASSIFICATION:
                    return DocConstantLookupTable.TERMCLASSIFICATION;
                case LookupTableEnm.TERMSECTION:
                    return DocConstantLookupTable.TERMSECTION;
                case LookupTableEnm.TIMECARDSTATUS:
                    return DocConstantLookupTable.TIMECARDSTATUS;
                case LookupTableEnm.TIMEPOINTTYPE:
                    return DocConstantLookupTable.TIMEPOINTTYPE;
                case LookupTableEnm.UNITSOFMEASURE:
                    return DocConstantLookupTable.UNITSOFMEASURE;
                case LookupTableEnm.UNITTYPE:
                    return DocConstantLookupTable.UNITTYPE;
                case LookupTableEnm.USEREMPLOYEETYPE:
                    return DocConstantLookupTable.USEREMPLOYEETYPE;
                case LookupTableEnm.USERPAYROLLSTATUS:
                    return DocConstantLookupTable.USERPAYROLLSTATUS;
                case LookupTableEnm.USERPAYROLLTYPE:
                    return DocConstantLookupTable.USERPAYROLLTYPE;
                case LookupTableEnm.USERTYPE:
                    return DocConstantLookupTable.USERTYPE;
                case LookupTableEnm.VALUESTATUS:
                    return DocConstantLookupTable.VALUESTATUS;
                case LookupTableEnm.VALUETYPE:
                    return DocConstantLookupTable.VALUETYPE;
                case LookupTableEnm.VARIABLERULE:
                    return DocConstantLookupTable.VARIABLERULE;
                case LookupTableEnm.VARIABLETYPE:
                    return DocConstantLookupTable.VARIABLETYPE;
                case LookupTableEnm.WORKFLOW:
                    return DocConstantLookupTable.WORKFLOW;
                case LookupTableEnm.WORKFLOWSTATUS:
                    return DocConstantLookupTable.WORKFLOWSTATUS;
                case LookupTableEnm.WORKFLOWTASKTYPE:
                    return DocConstantLookupTable.WORKFLOWTASKTYPE;
                case LookupTableEnm.YESNONA:
                    return DocConstantLookupTable.YESNONA;
                default:
                    return string.Empty;
            }
        }
    }

    public sealed partial class DocConstantLookupTable : IEquatable<DocConstantLookupTable>, IEqualityComparer<DocConstantLookupTable>
    {
        public const string AMPERSONCOUNT = "AmPersonCount";
        public const string APP = "App";
        public const string ARMPOPULATIONAGE = "ArmPopulationAge";
        public const string ARMPOPULATIONN = "ArmPopulationN";
        public const string ASSOCIATIONMEASURE = "AssociationMeasure";
        public const string ATTRIBUTECATEGORY = "AttributeCategory";
        public const string ATTRIBUTETYPE = "AttributeType";
        public const string BROADCASTSTATUS = "BroadcastStatus";
        public const string BROADCASTTYPE = "BroadcastType";
        public const string CONFIDENCEINTERVAL = "ConfidenceInterval";
        public const string CONJUNCTION = "Conjunction";
        public const string DATABASETYPE = "DatabaseType";
        public const string DATAHUBSEARCHCATEGORY = "DataHubSearchCategory";
        public const string DATAHUBSOURCE = "DataHubSource";
        public const string DEFAULTTIMEUNIT = "DefaultTimeUnit";
        public const string DEFAULTUNITTYPE = "DefaultUnitType";
        public const string DIRECTIONALITY = "Directionality";
        public const string DOCUMENTSETTYPE = "DocumentSetType";
        public const string DOCUMENTTYPE = "DocumentType";
        public const string DOSAGEPROTOCOL = "DosageProtocol";
        public const string DOSAGETYPE = "DosageType";
        public const string EQUALITYOPERATOR = "EqualityOperator";
        public const string ERRORMESSAGE = "ErrorMessage";
        public const string EXTERNALKEY = "ExternalKey";
        public const string FEATURE = "Feature";
        public const string FIELDTYPE = "FieldType";
        public const string FOREIGNKEYSTATUS = "ForeignKeyStatus";
        public const string FQREFERENCESTATUS = "FqReferenceStatus";
        public const string HELP = "Help";
        public const string IMPORTSTATUS = "ImportStatus";
        public const string INCIDENCERATETYPE = "IncidenceRateType";
        public const string INSTITUTIONTYPE = "InstitutionType";
        public const string INTEGRATIONNAME = "IntegrationName";
        public const string INTEGRATIONPROPERTYNAME = "IntegrationPropertyName";
        public const string INTERVENTIONLINEOFTREATMENT = "InterventionLineOfTreatment";
        public const string INTERVENTIONMEDIUM = "InterventionMedium";
        public const string INTERVENTIONPROVIDER = "InterventionProvider";
        public const string INTERVENTIONROUTE = "InterventionRoute";
        public const string INTERVENTIONSCHEDULE = "InterventionSchedule";
        public const string INTERVENTIONSTAGESETTING = "InterventionStageSetting";
        public const string INTERVENTIONTYPE = "InterventionType";
        public const string JOB = "Job";
        public const string JUNCTIONTYPE = "JunctionType";
        public const string LOOKUPTABLE = "LookupTable";
        public const string LOOKUPTYPE = "LookupType";
        public const string MANUALIZEDTREATMENT = "ManualizedTreatment";
        public const string MEANCALCULATIONTYPE = "MeanCalculationType";
        public const string MEANRANGETYPE = "MeanRangeType";
        public const string MEANVARIABLETYPE = "MeanVariableType";
        public const string MEANVARIANCETYPE = "MeanVarianceType";
        public const string METHODOFANALYSIS = "MethodOfAnalysis";
        public const string MODELNAME = "ModelName";
        public const string OUTCOMECATEGORY = "OutcomeCategory";
        public const string OUTCOMETYPE = "OutcomeType";
        public const string PERMISSION = "Permission";
        public const string POPULATIONTYPE = "PopulationType";
        public const string PREVALENCETYPE = "PrevalenceType";
        public const string PROTOCOLFILTEROWNER = "ProtocolFilterOwner";
        public const string PROTOCOLFILTERTYPE = "ProtocolFilterType";
        public const string PROTOCOLTYPE = "ProtocolType";
        public const string PUBLICATIONPOOLSTUDIES = "PublicationPoolStudies";
        public const string PUBTYPE = "PubType";
        public const string QUESTION = "Question";
        public const string QUESTIONCATEGORY = "QuestionCategory";
        public const string QUESTIONTYPE = "QuestionType";
        public const string QUEUECHANNEL = "QueueChannel";
        public const string RANDOMIZATION = "Randomization";
        public const string RANGETYPE = "RangeType";
        public const string RATING = "Rating";
        public const string REASONREJECTED = "ReasonRejected";
        public const string RECRUITMENTMETHOD = "RecruitmentMethod";
        public const string REPRESENTATIVESAMPLE = "RepresentativeSample";
        public const string RESPONSESCOLLECTEDBY = "ResponsesCollectedBy";
        public const string RESULTSCATEGORY = "ResultsCategory";
        public const string RISKOFBIASASSESSMENT = "RiskOfBiasAssessment";
        public const string SCOPE = "Scope";
        public const string SETTINGTYPE = "SettingType";
        public const string STATISTICALSIGNIFICANCE = "StatisticalSignificance";
        public const string STATISTICALTEST = "StatisticalTest";
        public const string STATSRECORDNAME = "StatsRecordName";
        public const string STATUS = "Status";
        public const string STRATIFICATIONTYPE = "StratificationType";
        public const string STUDYALLOCATTIONMETHOD = "StudyAllocattionMethod";
        public const string STUDYBIAS = "StudyBias";
        public const string STUDYBLINDINGMETHOD = "StudyBlindingMethod";
        public const string STUDYCOMPLIANCE = "StudyCompliance";
        public const string STUDYDESIGN = "StudyDesign";
        public const string STUDYDOCUMENTTYPE = "StudyDocumentType";
        public const string STUDYFUNDING = "StudyFunding";
        public const string STUDYGROUPTYPE = "StudyGroupType";
        public const string STUDYIMPORTLOCATION = "StudyImportLocation";
        public const string STUDYIMPORTTYPE = "StudyImportType";
        public const string STUDYNGA = "StudyNGA";
        public const string STUDYOBJECTIVE = "StudyObjective";
        public const string STUDYPHASENAMES = "StudyPhaseNames";
        public const string STUDYPURPOSE = "StudyPurpose";
        public const string STUDYRANDOMIZATIONMETHOD = "StudyRandomizationMethod";
        public const string STUDYTYPE = "StudyType";
        public const string STUDYTYPEHARMETIOLOGY = "StudyTypeHarmEtiology";
        public const string STUDYTYPETHERAPY = "StudyTypeTherapy";
        public const string STUDYYEARS = "StudyYears";
        public const string TERMCLASSIFICATION = "TermClassification";
        public const string TERMSECTION = "TermSection";
        public const string TIMECARDSTATUS = "TimeCardStatus";
        public const string TIMEPOINTTYPE = "TimepointType";
        public const string UNITSOFMEASURE = "UnitsOfMeasure";
        public const string UNITTYPE = "UnitType";
        public const string USEREMPLOYEETYPE = "UserEmployeeType";
        public const string USERPAYROLLSTATUS = "UserPayrollStatus";
        public const string USERPAYROLLTYPE = "UserPayrollType";
        public const string USERTYPE = "UserType";
        public const string VALUESTATUS = "ValueStatus";
        public const string VALUETYPE = "ValueType";
        public const string VARIABLERULE = "VariableRule";
        public const string VARIABLETYPE = "VariableType";
        public const string WORKFLOW = "Workflow";
        public const string WORKFLOWSTATUS = "WorkflowStatus";
        public const string WORKFLOWTASKTYPE = "WorkflowTaskType";
        public const string YESNONA = "YesNoNa";
        
        #region Internals
        
        private static List<string> _all;
        public static List<string> All => _all ?? (_all = typeof(DocConstantLookupTable).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());

        private readonly string Value;

        private DocConstantLookupTable(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }

        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));

        public static implicit operator DocConstantLookupTable(string Val) => new DocConstantLookupTable(Val);

        public static implicit operator string(DocConstantLookupTable item) => item?.Value ?? string.Empty;

        public override string ToString() => Value;

        #endregion Internals

        #region IEquatable

        public bool Equals(DocConstantLookupTable obj) => this == obj;

        public static bool operator ==(DocConstantLookupTable x, DocConstantLookupTable y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        
        public bool Equals(DocConstantLookupTable x, DocConstantLookupTable y) => x == y;
        
        public static bool operator !=(DocConstantLookupTable x, DocConstantLookupTable y) => !(x == y);

        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantLookupTable))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantLookupTable) obj;
            }
            return ret;
        }

        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
                
        public int GetHashCode(DocConstantLookupTable obj) => obj?.GetHashCode() ?? -17;

        #endregion IEquatable
    }
}
