//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using AutoMapper;

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;
using Services.Db;
using Services.Dto;
using Services.Dto.internals;
using Services.Dto.Security;
using Services.Enums;
using Services.Models;
using Services.Schema;

using ServiceStack;
using ServiceStack.Text;

using Typed;
using Typed.Bindings;
using Typed.Notifications;
using Typed.Settings;

using Xtensive.Orm;
using Xtensive.Orm.Model;

using Attribute = Services.Dto.Attribute;
using ValueType = Services.Dto.ValueType;
using Version = Services.Dto.Version;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ModelNameEnm
    {
        [EnumMember(Value = DocConstantModelName.APP)]
        APP = 14173,
        [EnumMember(Value = DocConstantModelName.ATTRIBUTE)]
        ATTRIBUTE = 102,
        [EnumMember(Value = DocConstantModelName.ATTRIBUTEINTERVAL)]
        ATTRIBUTEINTERVAL = 104,
        [EnumMember(Value = DocConstantModelName.AUDITDELTA)]
        AUDITDELTA = 19019,
        [EnumMember(Value = DocConstantModelName.AUDITRECORD)]
        AUDITRECORD = 108,
        [EnumMember(Value = DocConstantModelName.BACKGROUNDTASK)]
        BACKGROUNDTASK = 14375,
        [EnumMember(Value = DocConstantModelName.BACKGROUNDTASKHISTORY)]
        BACKGROUNDTASKHISTORY = 18919,
        [EnumMember(Value = DocConstantModelName.BACKGROUNDTASKITEM)]
        BACKGROUNDTASKITEM = 19935,
        [EnumMember(Value = DocConstantModelName.BROADCAST)]
        BROADCAST = 13962,
        [EnumMember(Value = DocConstantModelName.CHARACTERISTIC)]
        CHARACTERISTIC = 14475,
        [EnumMember(Value = DocConstantModelName.CLIENT)]
        CLIENT = 111,
        [EnumMember(Value = DocConstantModelName.COMMENT)]
        COMMENT = 18319,
        [EnumMember(Value = DocConstantModelName.COMPARATOR)]
        COMPARATOR = 20035,
        [EnumMember(Value = DocConstantModelName.DATABASEVERSION)]
        DATABASEVERSION = 18819,
        [EnumMember(Value = DocConstantModelName.DATACLASS)]
        DATACLASS = 20235,
        [EnumMember(Value = DocConstantModelName.DATAPROPERTY)]
        DATAPROPERTY = 20255,
        [EnumMember(Value = DocConstantModelName.DATATAB)]
        DATATAB = 20265,
        [EnumMember(Value = DocConstantModelName.DATETIME)]
        DATETIME = 15278,
        [EnumMember(Value = DocConstantModelName.DEFAULT)]
        DEFAULT = 19435,
        [EnumMember(Value = DocConstantModelName.DIVISION)]
        DIVISION = 112,
        [EnumMember(Value = DocConstantModelName.DOCUMENT)]
        DOCUMENT = 136,
        [EnumMember(Value = DocConstantModelName.DOCUMENTSET)]
        DOCUMENTSET = 142,
        [EnumMember(Value = DocConstantModelName.DOCUMENTSETHISTORY)]
        DOCUMENTSETHISTORY = 13320,
        [EnumMember(Value = DocConstantModelName.ENTITIES)]
        ENTITIES = 13364,
        [EnumMember(Value = DocConstantModelName.EOD)]
        EOD = 20385,
        [EnumMember(Value = DocConstantModelName.EVENT)]
        EVENT = 19219,
        [EnumMember(Value = DocConstantModelName.FAVORITE)]
        FAVORITE = 20485,
        [EnumMember(Value = DocConstantModelName.FEATURESET)]
        FEATURESET = 116,
        [EnumMember(Value = DocConstantModelName.GLOSSARY)]
        GLOSSARY = 14977,
        [EnumMember(Value = DocConstantModelName.HELP)]
        HELP = 14978,
        [EnumMember(Value = DocConstantModelName.HISTORY)]
        HISTORY = 15885,
        [EnumMember(Value = DocConstantModelName.IMPERSONATION)]
        IMPERSONATION = 19319,
        [EnumMember(Value = DocConstantModelName.IMPORTDATA)]
        IMPORTDATA = 12600,
        [EnumMember(Value = DocConstantModelName.INTERVAL)]
        INTERVAL = 15178,
        [EnumMember(Value = DocConstantModelName.INTERVENTION)]
        INTERVENTION = 13420,
        [EnumMember(Value = DocConstantModelName.JUNCTION)]
        JUNCTION = 17619,
        [EnumMember(Value = DocConstantModelName.LOCALE)]
        LOCALE = 19335,
        [EnumMember(Value = DocConstantModelName.LOCALELOOKUP)]
        LOCALELOOKUP = 19325,
        [EnumMember(Value = DocConstantModelName.LOOKUPCATEGORY)]
        LOOKUPCATEGORY = 17419,
        [EnumMember(Value = DocConstantModelName.LOOKUPTABLE)]
        LOOKUPTABLE = 127,
        [EnumMember(Value = DocConstantModelName.LOOKUPTABLEBINDING)]
        LOOKUPTABLEBINDING = 15380,
        [EnumMember(Value = DocConstantModelName.LOOKUPTABLEENUM)]
        LOOKUPTABLEENUM = 128,
        [EnumMember(Value = DocConstantModelName.MEANRANGES)]
        MEANRANGES = 130,
        [EnumMember(Value = DocConstantModelName.MEANRANGEVALUE)]
        MEANRANGEVALUE = 129,
        [EnumMember(Value = DocConstantModelName.MEANVARIANCES)]
        MEANVARIANCES = 18219,
        [EnumMember(Value = DocConstantModelName.MEANVARIANCEVALUE)]
        MEANVARIANCEVALUE = 18119,
        [EnumMember(Value = DocConstantModelName.OUTCOME)]
        OUTCOME = 13662,
        [EnumMember(Value = DocConstantModelName.PAGE)]
        PAGE = 180,
        [EnumMember(Value = DocConstantModelName.PROJECT)]
        PROJECT = 20135,
        [EnumMember(Value = DocConstantModelName.QUEUECHANNEL)]
        QUEUECHANNEL = 18519,
        [EnumMember(Value = DocConstantModelName.RATING)]
        RATING = 20365,
        [EnumMember(Value = DocConstantModelName.RELEASESTATUS)]
        RELEASESTATUS = 19835,
        [EnumMember(Value = DocConstantModelName.ROLE)]
        ROLE = 133,
        [EnumMember(Value = DocConstantModelName.SCOPE)]
        SCOPE = 15379,
        [EnumMember(Value = DocConstantModelName.STATS)]
        STATS = 14273,
        [EnumMember(Value = DocConstantModelName.STATSRECORD)]
        STATSRECORD = 14275,
        [EnumMember(Value = DocConstantModelName.STATSSTUDYSET)]
        STATSSTUDYSET = 14274,
        [EnumMember(Value = DocConstantModelName.STUDYDESIGN)]
        STUDYDESIGN = 137,
        [EnumMember(Value = DocConstantModelName.STUDYTYPE)]
        STUDYTYPE = 143,
        [EnumMember(Value = DocConstantModelName.TAG)]
        TAG = 18019,
        [EnumMember(Value = DocConstantModelName.TASK)]
        TASK = 18719,
        [EnumMember(Value = DocConstantModelName.TEAM)]
        TEAM = 15881,
        [EnumMember(Value = DocConstantModelName.TERMCATEGORY)]
        TERMCATEGORY = 146,
        [EnumMember(Value = DocConstantModelName.TERMMASTER)]
        TERMMASTER = 147,
        [EnumMember(Value = DocConstantModelName.TERMSYNONYM)]
        TERMSYNONYM = 148,
        [EnumMember(Value = DocConstantModelName.TIMECARD)]
        TIMECARD = 17319,
        [EnumMember(Value = DocConstantModelName.TIMEPOINT)]
        TIMEPOINT = 15078,
        [EnumMember(Value = DocConstantModelName.UNITCONVERSIONRULES)]
        UNITCONVERSIONRULES = 149,
        [EnumMember(Value = DocConstantModelName.UNITOFMEASURE)]
        UNITOFMEASURE = 150,
        [EnumMember(Value = DocConstantModelName.UNITS)]
        UNITS = 152,
        [EnumMember(Value = DocConstantModelName.UNITVALUE)]
        UNITVALUE = 151,
        [EnumMember(Value = DocConstantModelName.UPDATE)]
        UPDATE = 19119,
        [EnumMember(Value = DocConstantModelName.USER)]
        USER = 153,
        [EnumMember(Value = DocConstantModelName.USERREQUEST)]
        USERREQUEST = 18619,
        [EnumMember(Value = DocConstantModelName.USERSESSION)]
        USERSESSION = 18419,
        [EnumMember(Value = DocConstantModelName.USERTYPE)]
        USERTYPE = 17919,
        [EnumMember(Value = DocConstantModelName.VALUETYPE)]
        VALUETYPE = 171,
        [EnumMember(Value = DocConstantModelName.VARIABLEINSTANCE)]
        VARIABLEINSTANCE = 15781,
        [EnumMember(Value = DocConstantModelName.VARIABLERULE)]
        VARIABLERULE = 15680,
        [EnumMember(Value = DocConstantModelName.WORKFLOW)]
        WORKFLOW = 15378
    }
    
    public static partial class EnumExtensions
    {
        public static string ToEnumString(this ModelNameEnm instance)
        {
            switch(instance) 
            {
                case ModelNameEnm.APP:
                    return DocConstantModelName.APP;
                case ModelNameEnm.ATTRIBUTE:
                    return DocConstantModelName.ATTRIBUTE;
                case ModelNameEnm.ATTRIBUTEINTERVAL:
                    return DocConstantModelName.ATTRIBUTEINTERVAL;
                case ModelNameEnm.AUDITDELTA:
                    return DocConstantModelName.AUDITDELTA;
                case ModelNameEnm.AUDITRECORD:
                    return DocConstantModelName.AUDITRECORD;
                case ModelNameEnm.BACKGROUNDTASK:
                    return DocConstantModelName.BACKGROUNDTASK;
                case ModelNameEnm.BACKGROUNDTASKHISTORY:
                    return DocConstantModelName.BACKGROUNDTASKHISTORY;
                case ModelNameEnm.BACKGROUNDTASKITEM:
                    return DocConstantModelName.BACKGROUNDTASKITEM;
                case ModelNameEnm.BROADCAST:
                    return DocConstantModelName.BROADCAST;
                case ModelNameEnm.CHARACTERISTIC:
                    return DocConstantModelName.CHARACTERISTIC;
                case ModelNameEnm.CLIENT:
                    return DocConstantModelName.CLIENT;
                case ModelNameEnm.COMMENT:
                    return DocConstantModelName.COMMENT;
                case ModelNameEnm.COMPARATOR:
                    return DocConstantModelName.COMPARATOR;
                case ModelNameEnm.DATABASEVERSION:
                    return DocConstantModelName.DATABASEVERSION;
                case ModelNameEnm.DATACLASS:
                    return DocConstantModelName.DATACLASS;
                case ModelNameEnm.DATAPROPERTY:
                    return DocConstantModelName.DATAPROPERTY;
                case ModelNameEnm.DATATAB:
                    return DocConstantModelName.DATATAB;
                case ModelNameEnm.DATETIME:
                    return DocConstantModelName.DATETIME;
                case ModelNameEnm.DEFAULT:
                    return DocConstantModelName.DEFAULT;
                case ModelNameEnm.DIVISION:
                    return DocConstantModelName.DIVISION;
                case ModelNameEnm.DOCUMENT:
                    return DocConstantModelName.DOCUMENT;
                case ModelNameEnm.DOCUMENTSET:
                    return DocConstantModelName.DOCUMENTSET;
                case ModelNameEnm.DOCUMENTSETHISTORY:
                    return DocConstantModelName.DOCUMENTSETHISTORY;
                case ModelNameEnm.ENTITIES:
                    return DocConstantModelName.ENTITIES;
                case ModelNameEnm.EOD:
                    return DocConstantModelName.EOD;
                case ModelNameEnm.EVENT:
                    return DocConstantModelName.EVENT;
                case ModelNameEnm.FAVORITE:
                    return DocConstantModelName.FAVORITE;
                case ModelNameEnm.FEATURESET:
                    return DocConstantModelName.FEATURESET;
                case ModelNameEnm.GLOSSARY:
                    return DocConstantModelName.GLOSSARY;
                case ModelNameEnm.HELP:
                    return DocConstantModelName.HELP;
                case ModelNameEnm.HISTORY:
                    return DocConstantModelName.HISTORY;
                case ModelNameEnm.IMPERSONATION:
                    return DocConstantModelName.IMPERSONATION;
                case ModelNameEnm.IMPORTDATA:
                    return DocConstantModelName.IMPORTDATA;
                case ModelNameEnm.INTERVAL:
                    return DocConstantModelName.INTERVAL;
                case ModelNameEnm.INTERVENTION:
                    return DocConstantModelName.INTERVENTION;
                case ModelNameEnm.JUNCTION:
                    return DocConstantModelName.JUNCTION;
                case ModelNameEnm.LOCALE:
                    return DocConstantModelName.LOCALE;
                case ModelNameEnm.LOCALELOOKUP:
                    return DocConstantModelName.LOCALELOOKUP;
                case ModelNameEnm.LOOKUPCATEGORY:
                    return DocConstantModelName.LOOKUPCATEGORY;
                case ModelNameEnm.LOOKUPTABLE:
                    return DocConstantModelName.LOOKUPTABLE;
                case ModelNameEnm.LOOKUPTABLEBINDING:
                    return DocConstantModelName.LOOKUPTABLEBINDING;
                case ModelNameEnm.LOOKUPTABLEENUM:
                    return DocConstantModelName.LOOKUPTABLEENUM;
                case ModelNameEnm.MEANRANGES:
                    return DocConstantModelName.MEANRANGES;
                case ModelNameEnm.MEANRANGEVALUE:
                    return DocConstantModelName.MEANRANGEVALUE;
                case ModelNameEnm.MEANVARIANCES:
                    return DocConstantModelName.MEANVARIANCES;
                case ModelNameEnm.MEANVARIANCEVALUE:
                    return DocConstantModelName.MEANVARIANCEVALUE;
                case ModelNameEnm.OUTCOME:
                    return DocConstantModelName.OUTCOME;
                case ModelNameEnm.PAGE:
                    return DocConstantModelName.PAGE;
                case ModelNameEnm.PROJECT:
                    return DocConstantModelName.PROJECT;
                case ModelNameEnm.QUEUECHANNEL:
                    return DocConstantModelName.QUEUECHANNEL;
                case ModelNameEnm.RATING:
                    return DocConstantModelName.RATING;
                case ModelNameEnm.RELEASESTATUS:
                    return DocConstantModelName.RELEASESTATUS;
                case ModelNameEnm.ROLE:
                    return DocConstantModelName.ROLE;
                case ModelNameEnm.SCOPE:
                    return DocConstantModelName.SCOPE;
                case ModelNameEnm.STATS:
                    return DocConstantModelName.STATS;
                case ModelNameEnm.STATSRECORD:
                    return DocConstantModelName.STATSRECORD;
                case ModelNameEnm.STATSSTUDYSET:
                    return DocConstantModelName.STATSSTUDYSET;
                case ModelNameEnm.STUDYDESIGN:
                    return DocConstantModelName.STUDYDESIGN;
                case ModelNameEnm.STUDYTYPE:
                    return DocConstantModelName.STUDYTYPE;
                case ModelNameEnm.TAG:
                    return DocConstantModelName.TAG;
                case ModelNameEnm.TASK:
                    return DocConstantModelName.TASK;
                case ModelNameEnm.TEAM:
                    return DocConstantModelName.TEAM;
                case ModelNameEnm.TERMCATEGORY:
                    return DocConstantModelName.TERMCATEGORY;
                case ModelNameEnm.TERMMASTER:
                    return DocConstantModelName.TERMMASTER;
                case ModelNameEnm.TERMSYNONYM:
                    return DocConstantModelName.TERMSYNONYM;
                case ModelNameEnm.TIMECARD:
                    return DocConstantModelName.TIMECARD;
                case ModelNameEnm.TIMEPOINT:
                    return DocConstantModelName.TIMEPOINT;
                case ModelNameEnm.UNITCONVERSIONRULES:
                    return DocConstantModelName.UNITCONVERSIONRULES;
                case ModelNameEnm.UNITOFMEASURE:
                    return DocConstantModelName.UNITOFMEASURE;
                case ModelNameEnm.UNITS:
                    return DocConstantModelName.UNITS;
                case ModelNameEnm.UNITVALUE:
                    return DocConstantModelName.UNITVALUE;
                case ModelNameEnm.UPDATE:
                    return DocConstantModelName.UPDATE;
                case ModelNameEnm.USER:
                    return DocConstantModelName.USER;
                case ModelNameEnm.USERREQUEST:
                    return DocConstantModelName.USERREQUEST;
                case ModelNameEnm.USERSESSION:
                    return DocConstantModelName.USERSESSION;
                case ModelNameEnm.USERTYPE:
                    return DocConstantModelName.USERTYPE;
                case ModelNameEnm.VALUETYPE:
                    return DocConstantModelName.VALUETYPE;
                case ModelNameEnm.VARIABLEINSTANCE:
                    return DocConstantModelName.VARIABLEINSTANCE;
                case ModelNameEnm.VARIABLERULE:
                    return DocConstantModelName.VARIABLERULE;
                case ModelNameEnm.WORKFLOW:
                    return DocConstantModelName.WORKFLOW;
                default:
                    return string.Empty;
            }
        }
    }

    public sealed partial class DocConstantModelName : IEquatable<DocConstantModelName>, IEqualityComparer<DocConstantModelName>
    {
        public const string APP = "App";
        public const string ATTRIBUTE = "Attribute";
        public const string ATTRIBUTEINTERVAL = "AttributeInterval";
        public const string AUDITDELTA = "AuditDelta";
        public const string AUDITRECORD = "AuditRecord";
        public const string BACKGROUNDTASK = "BackgroundTask";
        public const string BACKGROUNDTASKHISTORY = "BackgroundTaskHistory";
        public const string BACKGROUNDTASKITEM = "BackgroundTaskItem";
        public const string BROADCAST = "Broadcast";
        public const string CHARACTERISTIC = "Characteristic";
        public const string CLIENT = "Client";
        public const string COMMENT = "Comment";
        public const string COMPARATOR = "Comparator";
        public const string DATABASEVERSION = "DatabaseVersion";
        public const string DATACLASS = "DataClass";
        public const string DATAPROPERTY = "DataProperty";
        public const string DATATAB = "DataTab";
        public const string DATETIME = "DateTime";
        public const string DEFAULT = "Default";
        public const string DIVISION = "Division";
        public const string DOCUMENT = "Document";
        public const string DOCUMENTSET = "DocumentSet";
        public const string DOCUMENTSETHISTORY = "DocumentSetHistory";
        public const string ENTITIES = "Entities";
        public const string EOD = "EoD";
        public const string EVENT = "Event";
        public const string FAVORITE = "Favorite";
        public const string FEATURESET = "FeatureSet";
        public const string GLOSSARY = "Glossary";
        public const string HELP = "Help";
        public const string HISTORY = "History";
        public const string IMPERSONATION = "Impersonation";
        public const string IMPORTDATA = "ImportData";
        public const string INTERVAL = "Interval";
        public const string INTERVENTION = "Intervention";
        public const string JUNCTION = "Junction";
        public const string LOCALE = "Locale";
        public const string LOCALELOOKUP = "LocaleLookup";
        public const string LOOKUPCATEGORY = "LookupCategory";
        public const string LOOKUPTABLE = "LookupTable";
        public const string LOOKUPTABLEBINDING = "LookupTableBinding";
        public const string LOOKUPTABLEENUM = "LookupTableEnum";
        public const string MEANRANGES = "MeanRanges";
        public const string MEANRANGEVALUE = "MeanRangeValue";
        public const string MEANVARIANCES = "MeanVariances";
        public const string MEANVARIANCEVALUE = "MeanVarianceValue";
        public const string OUTCOME = "Outcome";
        public const string PAGE = "Page";
        public const string PROJECT = "Project";
        public const string QUEUECHANNEL = "QueueChannel";
        public const string RATING = "Rating";
        public const string RELEASESTATUS = "ReleaseStatus";
        public const string ROLE = "Role";
        public const string SCOPE = "Scope";
        public const string STATS = "Stats";
        public const string STATSRECORD = "StatsRecord";
        public const string STATSSTUDYSET = "StatsStudySet";
        public const string STUDYDESIGN = "StudyDesign";
        public const string STUDYTYPE = "StudyType";
        public const string TAG = "Tag";
        public const string TASK = "Task";
        public const string TEAM = "Team";
        public const string TERMCATEGORY = "TermCategory";
        public const string TERMMASTER = "TermMaster";
        public const string TERMSYNONYM = "TermSynonym";
        public const string TIMECARD = "TimeCard";
        public const string TIMEPOINT = "TimePoint";
        public const string UNITCONVERSIONRULES = "UnitConversionRules";
        public const string UNITOFMEASURE = "UnitOfMeasure";
        public const string UNITS = "Units";
        public const string UNITVALUE = "UnitValue";
        public const string UPDATE = "Update";
        public const string USER = "User";
        public const string USERREQUEST = "UserRequest";
        public const string USERSESSION = "UserSession";
        public const string USERTYPE = "UserType";
        public const string VALUETYPE = "ValueType";
        public const string VARIABLEINSTANCE = "VariableInstance";
        public const string VARIABLERULE = "VariableRule";
        public const string WORKFLOW = "Workflow";
        
        #region Internals
        
        private static List<string> _all;
        public static List<string> All => _all ?? (_all = typeof(DocConstantModelName).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());

        private readonly string Value;

        private DocConstantModelName(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }

        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));

        public static implicit operator DocConstantModelName(string Val) => new DocConstantModelName(Val);

        public static implicit operator string(DocConstantModelName item) => item?.Value ?? string.Empty;

        public override string ToString() => Value;

        #endregion Internals

        #region IEquatable

        public bool Equals(DocConstantModelName obj) => this == obj;

        public static bool operator ==(DocConstantModelName x, DocConstantModelName y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        
        public bool Equals(DocConstantModelName x, DocConstantModelName y) => x == y;
        
        public static bool operator !=(DocConstantModelName x, DocConstantModelName y) => !(x == y);

        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantModelName))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantModelName) obj;
            }
            return ret;
        }

        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
                
        public int GetHashCode(DocConstantModelName obj) => obj?.GetHashCode() ?? -17;

        #endregion IEquatable
    }
}
