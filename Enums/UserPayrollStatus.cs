//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;

using ServiceStack;

using SCDescript = System.ComponentModel.DescriptionAttribute;
using SCDisplay = System.ComponentModel.DataAnnotations.DisplayAttribute;
using SSDescript = ServiceStack.DataAnnotations.DescriptionAttribute;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum UserPayrollStatusEnm
    {
        [EnumMember(Value = DocConstantUserPayrollStatus.CONTRACT), SCDescript(DocConstantUserPayrollStatus.CONTRACT), SSDescript(DocConstantUserPayrollStatus.CONTRACT), SCDisplay(Name = DocConstantUserPayrollStatus.CONTRACT)]
        CONTRACT = 76351795,
        [EnumMember(Value = DocConstantUserPayrollStatus.FULL_TIME), SCDescript(DocConstantUserPayrollStatus.FULL_TIME), SSDescript(DocConstantUserPayrollStatus.FULL_TIME), SCDisplay(Name = DocConstantUserPayrollStatus.FULL_TIME)]
        FULL_TIME = 76351793,
        [EnumMember(Value = DocConstantUserPayrollStatus.PART_TIME), SCDescript(DocConstantUserPayrollStatus.PART_TIME), SSDescript(DocConstantUserPayrollStatus.PART_TIME), SCDisplay(Name = DocConstantUserPayrollStatus.PART_TIME)]
        PART_TIME = 76351794
    }
    
    public static partial class EnumExtensions
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this UserPayrollStatusEnm instance)
        {
            switch(instance)
            {
                case UserPayrollStatusEnm.CONTRACT:
                    return DocConstantUserPayrollStatus.CONTRACT;
                case UserPayrollStatusEnm.FULL_TIME:
                    return DocConstantUserPayrollStatus.FULL_TIME;
                case UserPayrollStatusEnm.PART_TIME:
                    return DocConstantUserPayrollStatus.PART_TIME;
                default:
                    return string.Empty;
            }
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this UserPayrollStatusEnm? instance)
        {
            if(null == instance) return string.Empty;
            return instance.Value.ToEnumString();
        }
    }

    public sealed partial class DocConstantUserPayrollStatus : IEquatable<DocConstantUserPayrollStatus>, IEqualityComparer<DocConstantUserPayrollStatus>
    {
        public const string CONTRACT = "Contract";
        public const string FULL_TIME = "Full-Time";
        public const string PART_TIME = "Part-Time";
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private static List<string> _all;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> All => _all ?? (_all = typeof(DocConstantUserPayrollStatus).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private readonly string Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private DocConstantUserPayrollStatus(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator DocConstantUserPayrollStatus(string Val) => new DocConstantUserPayrollStatus(Val);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator string(DocConstantUserPayrollStatus item) => item?.Value ?? string.Empty;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator DocConstantUserPayrollStatus(UserPayrollStatusEnm Val) => new DocConstantUserPayrollStatus(Val.ToEnumString());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator UserPayrollStatusEnm(DocConstantUserPayrollStatus item)
        {
            Enum.TryParse<UserPayrollStatusEnm>(item.ToString(), true, out var tryRet);
            return tryRet;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override string ToString() => Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantUserPayrollStatus obj) => this == obj;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator ==(DocConstantUserPayrollStatus x, DocConstantUserPayrollStatus y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantUserPayrollStatus x, DocConstantUserPayrollStatus y) => x == y;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator !=(DocConstantUserPayrollStatus x, DocConstantUserPayrollStatus y) => !(x == y);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantUserPayrollStatus))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantUserPayrollStatus) obj;
            }
            return ret;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int GetHashCode(DocConstantUserPayrollStatus obj) => obj?.GetHashCode() ?? -17;
    }
}
