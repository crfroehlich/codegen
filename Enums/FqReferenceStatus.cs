//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;

using ServiceStack;

using SCDescript = System.ComponentModel.DescriptionAttribute;
using SCDisplay = System.ComponentModel.DataAnnotations.DisplayAttribute;
using SSDescript = ServiceStack.DataAnnotations.DescriptionAttribute;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FqReferenceStatusEnm
    {
        [EnumMember(Value = DocConstantFqReferenceStatus.ASSIGNED), SCDescript(DocConstantFqReferenceStatus.ASSIGNED), SSDescript(DocConstantFqReferenceStatus.ASSIGNED), SCDisplay(Name = DocConstantFqReferenceStatus.ASSIGNED)]
        ASSIGNED = 77289732,
        [EnumMember(Value = DocConstantFqReferenceStatus.HOLD), SCDescript(DocConstantFqReferenceStatus.HOLD), SSDescript(DocConstantFqReferenceStatus.HOLD), SCDisplay(Name = DocConstantFqReferenceStatus.HOLD)]
        HOLD = 77289733,
        [EnumMember(Value = DocConstantFqReferenceStatus.REJECTED), SCDescript(DocConstantFqReferenceStatus.REJECTED), SSDescript(DocConstantFqReferenceStatus.REJECTED), SCDisplay(Name = DocConstantFqReferenceStatus.REJECTED)]
        REJECTED = 77289735,
        [EnumMember(Value = DocConstantFqReferenceStatus.REVIEW), SCDescript(DocConstantFqReferenceStatus.REVIEW), SSDescript(DocConstantFqReferenceStatus.REVIEW), SCDisplay(Name = DocConstantFqReferenceStatus.REVIEW)]
        REVIEW = 77289734,
        [EnumMember(Value = DocConstantFqReferenceStatus.UPLOADED), SCDescript(DocConstantFqReferenceStatus.UPLOADED), SSDescript(DocConstantFqReferenceStatus.UPLOADED), SCDisplay(Name = DocConstantFqReferenceStatus.UPLOADED)]
        UPLOADED = 77289736
    }
    
    public static partial class EnumExtensions
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this FqReferenceStatusEnm instance)
        {
            switch(instance)
            {
                case FqReferenceStatusEnm.ASSIGNED:
                    return DocConstantFqReferenceStatus.ASSIGNED;
                case FqReferenceStatusEnm.HOLD:
                    return DocConstantFqReferenceStatus.HOLD;
                case FqReferenceStatusEnm.REJECTED:
                    return DocConstantFqReferenceStatus.REJECTED;
                case FqReferenceStatusEnm.REVIEW:
                    return DocConstantFqReferenceStatus.REVIEW;
                case FqReferenceStatusEnm.UPLOADED:
                    return DocConstantFqReferenceStatus.UPLOADED;
                default:
                    return string.Empty;
            }
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this FqReferenceStatusEnm? instance)
        {
            if(null == instance) return string.Empty;
            return instance.Value.ToEnumString();
        }
    }

    public sealed partial class DocConstantFqReferenceStatus : IEquatable<DocConstantFqReferenceStatus>, IEqualityComparer<DocConstantFqReferenceStatus>
    {
        public const string ASSIGNED = "Assigned";
        public const string HOLD = "Hold";
        public const string REJECTED = "Rejected";
        public const string REVIEW = "Review";
        public const string UPLOADED = "Uploaded";
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private static List<string> _all;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> All => _all ?? (_all = typeof(DocConstantFqReferenceStatus).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private readonly string Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private DocConstantFqReferenceStatus(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator DocConstantFqReferenceStatus(string Val) => new DocConstantFqReferenceStatus(Val);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator string(DocConstantFqReferenceStatus item) => item?.Value ?? string.Empty;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator DocConstantFqReferenceStatus(FqReferenceStatusEnm Val) => new DocConstantFqReferenceStatus(Val.ToEnumString());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator FqReferenceStatusEnm(DocConstantFqReferenceStatus item)
        {
            Enum.TryParse<FqReferenceStatusEnm>(item.ToString(), true, out var tryRet);
            return tryRet;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override string ToString() => Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantFqReferenceStatus obj) => this == obj;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator ==(DocConstantFqReferenceStatus x, DocConstantFqReferenceStatus y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantFqReferenceStatus x, DocConstantFqReferenceStatus y) => x == y;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator !=(DocConstantFqReferenceStatus x, DocConstantFqReferenceStatus y) => !(x == y);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantFqReferenceStatus))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantFqReferenceStatus) obj;
            }
            return ret;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int GetHashCode(DocConstantFqReferenceStatus obj) => obj?.GetHashCode() ?? -17;
    }
}
