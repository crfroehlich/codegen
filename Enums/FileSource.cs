//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;

using ServiceStack;

using SCDescript = System.ComponentModel.DescriptionAttribute;
using SCDisplay = System.ComponentModel.DataAnnotations.DisplayAttribute;
using SSDescript = ServiceStack.DataAnnotations.DescriptionAttribute;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FileSourceEnm
    {
        [EnumMember(Value = DocConstantFileSource.CLIENT_SUPPLIED), SCDescript(DocConstantFileSource.CLIENT_SUPPLIED), SSDescript(DocConstantFileSource.CLIENT_SUPPLIED), SCDisplay(Name = DocConstantFileSource.CLIENT_SUPPLIED)]
        CLIENT_SUPPLIED = 156369072,
        [EnumMember(Value = DocConstantFileSource.DOCUMENT_DELIVERY), SCDescript(DocConstantFileSource.DOCUMENT_DELIVERY), SSDescript(DocConstantFileSource.DOCUMENT_DELIVERY), SCDisplay(Name = DocConstantFileSource.DOCUMENT_DELIVERY)]
        DOCUMENT_DELIVERY = 156369073,
        [EnumMember(Value = DocConstantFileSource.PMC_BMC), SCDescript(DocConstantFileSource.PMC_BMC), SSDescript(DocConstantFileSource.PMC_BMC), SCDisplay(Name = DocConstantFileSource.PMC_BMC)]
        PMC_BMC = 156369074,
        [EnumMember(Value = DocConstantFileSource.PUBLISHER), SCDescript(DocConstantFileSource.PUBLISHER), SSDescript(DocConstantFileSource.PUBLISHER), SCDisplay(Name = DocConstantFileSource.PUBLISHER)]
        PUBLISHER = 156369075,
        [EnumMember(Value = DocConstantFileSource.SUBSCRIPTION), SCDescript(DocConstantFileSource.SUBSCRIPTION), SSDescript(DocConstantFileSource.SUBSCRIPTION), SCDisplay(Name = DocConstantFileSource.SUBSCRIPTION)]
        SUBSCRIPTION = 156369076,
        [EnumMember(Value = DocConstantFileSource.UCLA), SCDescript(DocConstantFileSource.UCLA), SSDescript(DocConstantFileSource.UCLA), SCDisplay(Name = DocConstantFileSource.UCLA)]
        UCLA = 156369077
    }
    
    public static partial class EnumExtensions
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this FileSourceEnm instance)
        {
            switch(instance)
            {
                case FileSourceEnm.CLIENT_SUPPLIED:
                    return DocConstantFileSource.CLIENT_SUPPLIED;
                case FileSourceEnm.DOCUMENT_DELIVERY:
                    return DocConstantFileSource.DOCUMENT_DELIVERY;
                case FileSourceEnm.PMC_BMC:
                    return DocConstantFileSource.PMC_BMC;
                case FileSourceEnm.PUBLISHER:
                    return DocConstantFileSource.PUBLISHER;
                case FileSourceEnm.SUBSCRIPTION:
                    return DocConstantFileSource.SUBSCRIPTION;
                case FileSourceEnm.UCLA:
                    return DocConstantFileSource.UCLA;
                default:
                    return string.Empty;
            }
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this FileSourceEnm? instance)
        {
            if(null == instance) return string.Empty;
            return instance.Value.ToEnumString();
        }
    }

    public sealed partial class DocConstantFileSource : IEquatable<DocConstantFileSource>, IEqualityComparer<DocConstantFileSource>
    {
        public const string CLIENT_SUPPLIED = "Client Supplied";
        public const string DOCUMENT_DELIVERY = "Document Delivery";
        public const string PMC_BMC = "PMC/BMC";
        public const string PUBLISHER = "Publisher";
        public const string SUBSCRIPTION = "Subscription";
        public const string UCLA = "UCLA";
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private static List<string> _all;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> All => _all ?? (_all = typeof(DocConstantFileSource).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private readonly string Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private DocConstantFileSource(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator DocConstantFileSource(string Val) => new DocConstantFileSource(Val);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator string(DocConstantFileSource item) => item?.Value ?? string.Empty;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator DocConstantFileSource(FileSourceEnm Val) => new DocConstantFileSource(Val.ToEnumString());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator FileSourceEnm(DocConstantFileSource item)
        {
            Enum.TryParse<FileSourceEnm>(item.ToString(), true, out var tryRet);
            return tryRet;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override string ToString() => Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantFileSource obj) => this == obj;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator ==(DocConstantFileSource x, DocConstantFileSource y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantFileSource x, DocConstantFileSource y) => x == y;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator !=(DocConstantFileSource x, DocConstantFileSource y) => !(x == y);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantFileSource))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantFileSource) obj;
            }
            return ret;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int GetHashCode(DocConstantFileSource obj) => obj?.GetHashCode() ?? -17;
    }
}
