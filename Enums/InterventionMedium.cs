//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;

using ServiceStack;

using SCDescript = System.ComponentModel.DescriptionAttribute;
using SCDisplay = System.ComponentModel.DataAnnotations.DisplayAttribute;
using SSDescript = ServiceStack.DataAnnotations.DescriptionAttribute;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum InterventionMediumEnm
    {
        [EnumMember(Value = DocConstantInterventionMedium.BOOKLET), SCDescript(DocConstantInterventionMedium.BOOKLET), SSDescript(DocConstantInterventionMedium.BOOKLET), SCDisplay(Name = DocConstantInterventionMedium.BOOKLET)]
        BOOKLET = 1147,
        [EnumMember(Value = DocConstantInterventionMedium.BROCHURE), SCDescript(DocConstantInterventionMedium.BROCHURE), SSDescript(DocConstantInterventionMedium.BROCHURE), SCDisplay(Name = DocConstantInterventionMedium.BROCHURE)]
        BROCHURE = 1152,
        [EnumMember(Value = DocConstantInterventionMedium.VIDEO), SCDescript(DocConstantInterventionMedium.VIDEO), SSDescript(DocConstantInterventionMedium.VIDEO), SCDisplay(Name = DocConstantInterventionMedium.VIDEO)]
        VIDEO = 1157,
        [EnumMember(Value = DocConstantInterventionMedium.WEBSITE), SCDescript(DocConstantInterventionMedium.WEBSITE), SSDescript(DocConstantInterventionMedium.WEBSITE), SCDisplay(Name = DocConstantInterventionMedium.WEBSITE)]
        WEBSITE = 1162
    }
    
    public static partial class EnumExtensions
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this InterventionMediumEnm instance)
        {
            switch(instance)
            {
                case InterventionMediumEnm.BOOKLET:
                    return DocConstantInterventionMedium.BOOKLET;
                case InterventionMediumEnm.BROCHURE:
                    return DocConstantInterventionMedium.BROCHURE;
                case InterventionMediumEnm.VIDEO:
                    return DocConstantInterventionMedium.VIDEO;
                case InterventionMediumEnm.WEBSITE:
                    return DocConstantInterventionMedium.WEBSITE;
                default:
                    return string.Empty;
            }
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this InterventionMediumEnm? instance)
        {
            if(null == instance) return string.Empty;
            return instance.Value.ToEnumString();
        }
    }

    public sealed partial class DocConstantInterventionMedium : IEquatable<DocConstantInterventionMedium>, IEqualityComparer<DocConstantInterventionMedium>
    {
        public const string BOOKLET = "Booklet";
        public const string BROCHURE = "Brochure";
        public const string VIDEO = "Video";
        public const string WEBSITE = "Website";
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private static List<string> _all;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> All => _all ?? (_all = typeof(DocConstantInterventionMedium).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private readonly string Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private DocConstantInterventionMedium(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator DocConstantInterventionMedium(string Val) => new DocConstantInterventionMedium(Val);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator string(DocConstantInterventionMedium item) => item?.Value ?? string.Empty;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator DocConstantInterventionMedium(InterventionMediumEnm Val) => new DocConstantInterventionMedium(Val.ToEnumString());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator InterventionMediumEnm(DocConstantInterventionMedium item)
        {
            Enum.TryParse<InterventionMediumEnm>(item.ToString(), true, out var tryRet);
            return tryRet;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override string ToString() => Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantInterventionMedium obj) => this == obj;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator ==(DocConstantInterventionMedium x, DocConstantInterventionMedium y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantInterventionMedium x, DocConstantInterventionMedium y) => x == y;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator !=(DocConstantInterventionMedium x, DocConstantInterventionMedium y) => !(x == y);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantInterventionMedium))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantInterventionMedium) obj;
            }
            return ret;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int GetHashCode(DocConstantInterventionMedium obj) => obj?.GetHashCode() ?? -17;
    }
}
