//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;
using System.Reflection;
using System.Runtime.Serialization;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

using Services.Core;

using ServiceStack;

using SCDescript = System.ComponentModel.DescriptionAttribute;
using SCDisplay = System.ComponentModel.DataAnnotations.DisplayAttribute;
using SSDescript = ServiceStack.DataAnnotations.DescriptionAttribute;
namespace Services.Enums
{
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ReasonRejectedEnm
    {
        [EnumMember(Value = DocConstantReasonRejected.ABSTRACT_INSUFFICIENT_INFORMATION), SCDescript(DocConstantReasonRejected.ABSTRACT_INSUFFICIENT_INFORMATION), SSDescript(DocConstantReasonRejected.ABSTRACT_INSUFFICIENT_INFORMATION), SCDisplay(Name = DocConstantReasonRejected.ABSTRACT_INSUFFICIENT_INFORMATION)]
        ABSTRACT_INSUFFICIENT_INFORMATION = 77289761,
        [EnumMember(Value = DocConstantReasonRejected.ANIMAL_STUDY), SCDescript(DocConstantReasonRejected.ANIMAL_STUDY), SSDescript(DocConstantReasonRejected.ANIMAL_STUDY), SCDisplay(Name = DocConstantReasonRejected.ANIMAL_STUDY)]
        ANIMAL_STUDY = 77289753,
        [EnumMember(Value = DocConstantReasonRejected.DOES_NOT_MEET_PROTOCOL), SCDescript(DocConstantReasonRejected.DOES_NOT_MEET_PROTOCOL), SSDescript(DocConstantReasonRejected.DOES_NOT_MEET_PROTOCOL), SCDisplay(Name = DocConstantReasonRejected.DOES_NOT_MEET_PROTOCOL)]
        DOES_NOT_MEET_PROTOCOL = 77289741,
        [EnumMember(Value = DocConstantReasonRejected.DUPLICATE_PUBLICATION), SCDescript(DocConstantReasonRejected.DUPLICATE_PUBLICATION), SSDescript(DocConstantReasonRejected.DUPLICATE_PUBLICATION), SCDisplay(Name = DocConstantReasonRejected.DUPLICATE_PUBLICATION)]
        DUPLICATE_PUBLICATION = 77289759,
        [EnumMember(Value = DocConstantReasonRejected.ERRONEOUS_DATA), SCDescript(DocConstantReasonRejected.ERRONEOUS_DATA), SSDescript(DocConstantReasonRejected.ERRONEOUS_DATA), SCDisplay(Name = DocConstantReasonRejected.ERRONEOUS_DATA)]
        ERRONEOUS_DATA = 77289758,
        [EnumMember(Value = DocConstantReasonRejected.IN_VITRO_STUDY), SCDescript(DocConstantReasonRejected.IN_VITRO_STUDY), SSDescript(DocConstantReasonRejected.IN_VITRO_STUDY), SCDisplay(Name = DocConstantReasonRejected.IN_VITRO_STUDY)]
        IN_VITRO_STUDY = 77289752,
        [EnumMember(Value = DocConstantReasonRejected.MISSING_CHARACTERISTICS), SCDescript(DocConstantReasonRejected.MISSING_CHARACTERISTICS), SSDescript(DocConstantReasonRejected.MISSING_CHARACTERISTICS), SCDisplay(Name = DocConstantReasonRejected.MISSING_CHARACTERISTICS)]
        MISSING_CHARACTERISTICS = 77289756,
        [EnumMember(Value = DocConstantReasonRejected.MISSING_OUTCOMES), SCDescript(DocConstantReasonRejected.MISSING_OUTCOMES), SSDescript(DocConstantReasonRejected.MISSING_OUTCOMES), SCDisplay(Name = DocConstantReasonRejected.MISSING_OUTCOMES)]
        MISSING_OUTCOMES = 77289757,
        [EnumMember(Value = DocConstantReasonRejected.NOT_CLINICAL_STUDY), SCDescript(DocConstantReasonRejected.NOT_CLINICAL_STUDY), SSDescript(DocConstantReasonRejected.NOT_CLINICAL_STUDY), SCDisplay(Name = DocConstantReasonRejected.NOT_CLINICAL_STUDY)]
        NOT_CLINICAL_STUDY = 77289749,
        [EnumMember(Value = DocConstantReasonRejected.NOT_ENGLISH), SCDescript(DocConstantReasonRejected.NOT_ENGLISH), SSDescript(DocConstantReasonRejected.NOT_ENGLISH), SCDisplay(Name = DocConstantReasonRejected.NOT_ENGLISH)]
        NOT_ENGLISH = 77289754,
        [EnumMember(Value = DocConstantReasonRejected.NOT_TREAMENT_STUDY), SCDescript(DocConstantReasonRejected.NOT_TREAMENT_STUDY), SSDescript(DocConstantReasonRejected.NOT_TREAMENT_STUDY), SCDisplay(Name = DocConstantReasonRejected.NOT_TREAMENT_STUDY)]
        NOT_TREAMENT_STUDY = 77289747,
        [EnumMember(Value = DocConstantReasonRejected.RELEVANT_MISCLASSIFIED_REFERENCE), SCDescript(DocConstantReasonRejected.RELEVANT_MISCLASSIFIED_REFERENCE), SSDescript(DocConstantReasonRejected.RELEVANT_MISCLASSIFIED_REFERENCE), SCDisplay(Name = DocConstantReasonRejected.RELEVANT_MISCLASSIFIED_REFERENCE)]
        RELEVANT_MISCLASSIFIED_REFERENCE = 77289764,
        [EnumMember(Value = DocConstantReasonRejected.STUDY_FITS_PROTOCOL_ADD_LATER), SCDescript(DocConstantReasonRejected.STUDY_FITS_PROTOCOL_ADD_LATER), SSDescript(DocConstantReasonRejected.STUDY_FITS_PROTOCOL_ADD_LATER), SCDisplay(Name = DocConstantReasonRejected.STUDY_FITS_PROTOCOL_ADD_LATER)]
        STUDY_FITS_PROTOCOL_ADD_LATER = 77289762,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_COMPARISON), SCDescript(DocConstantReasonRejected.WRONG_COMPARISON), SSDescript(DocConstantReasonRejected.WRONG_COMPARISON), SCDisplay(Name = DocConstantReasonRejected.WRONG_COMPARISON)]
        WRONG_COMPARISON = 77289745,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_INTERVENTION), SCDescript(DocConstantReasonRejected.WRONG_INTERVENTION), SSDescript(DocConstantReasonRejected.WRONG_INTERVENTION), SCDisplay(Name = DocConstantReasonRejected.WRONG_INTERVENTION)]
        WRONG_INTERVENTION = 77289744,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_NUMBER_PARTICIPANTS), SCDescript(DocConstantReasonRejected.WRONG_NUMBER_PARTICIPANTS), SSDescript(DocConstantReasonRejected.WRONG_NUMBER_PARTICIPANTS), SCDisplay(Name = DocConstantReasonRejected.WRONG_NUMBER_PARTICIPANTS)]
        WRONG_NUMBER_PARTICIPANTS = 77289751,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_OUTCOME_STRATIFICATION), SCDescript(DocConstantReasonRejected.WRONG_OUTCOME_STRATIFICATION), SSDescript(DocConstantReasonRejected.WRONG_OUTCOME_STRATIFICATION), SCDisplay(Name = DocConstantReasonRejected.WRONG_OUTCOME_STRATIFICATION)]
        WRONG_OUTCOME_STRATIFICATION = 77289760,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_OUTCOMES), SCDescript(DocConstantReasonRejected.WRONG_OUTCOMES), SSDescript(DocConstantReasonRejected.WRONG_OUTCOMES), SCDisplay(Name = DocConstantReasonRejected.WRONG_OUTCOMES)]
        WRONG_OUTCOMES = 77289746,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_POPULATION), SCDescript(DocConstantReasonRejected.WRONG_POPULATION), SSDescript(DocConstantReasonRejected.WRONG_POPULATION), SCDisplay(Name = DocConstantReasonRejected.WRONG_POPULATION)]
        WRONG_POPULATION = 77289743,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_PUBLICATION_DATE_CUTOFF), SCDescript(DocConstantReasonRejected.WRONG_PUBLICATION_DATE_CUTOFF), SSDescript(DocConstantReasonRejected.WRONG_PUBLICATION_DATE_CUTOFF), SCDisplay(Name = DocConstantReasonRejected.WRONG_PUBLICATION_DATE_CUTOFF)]
        WRONG_PUBLICATION_DATE_CUTOFF = 77289755,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_SETTING), SCDescript(DocConstantReasonRejected.WRONG_SETTING), SSDescript(DocConstantReasonRejected.WRONG_SETTING), SCDisplay(Name = DocConstantReasonRejected.WRONG_SETTING)]
        WRONG_SETTING = 150785331,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_STUDY_DESIGN), SCDescript(DocConstantReasonRejected.WRONG_STUDY_DESIGN), SSDescript(DocConstantReasonRejected.WRONG_STUDY_DESIGN), SCDisplay(Name = DocConstantReasonRejected.WRONG_STUDY_DESIGN)]
        WRONG_STUDY_DESIGN = 77289742,
        [EnumMember(Value = DocConstantReasonRejected.WRONG_TIMING), SCDescript(DocConstantReasonRejected.WRONG_TIMING), SSDescript(DocConstantReasonRejected.WRONG_TIMING), SCDisplay(Name = DocConstantReasonRejected.WRONG_TIMING)]
        WRONG_TIMING = 150785330
    }
    
    public static partial class EnumExtensions
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this ReasonRejectedEnm instance)
        {
            switch(instance)
            {
                case ReasonRejectedEnm.ABSTRACT_INSUFFICIENT_INFORMATION:
                    return DocConstantReasonRejected.ABSTRACT_INSUFFICIENT_INFORMATION;
                case ReasonRejectedEnm.ANIMAL_STUDY:
                    return DocConstantReasonRejected.ANIMAL_STUDY;
                case ReasonRejectedEnm.DOES_NOT_MEET_PROTOCOL:
                    return DocConstantReasonRejected.DOES_NOT_MEET_PROTOCOL;
                case ReasonRejectedEnm.DUPLICATE_PUBLICATION:
                    return DocConstantReasonRejected.DUPLICATE_PUBLICATION;
                case ReasonRejectedEnm.ERRONEOUS_DATA:
                    return DocConstantReasonRejected.ERRONEOUS_DATA;
                case ReasonRejectedEnm.IN_VITRO_STUDY:
                    return DocConstantReasonRejected.IN_VITRO_STUDY;
                case ReasonRejectedEnm.MISSING_CHARACTERISTICS:
                    return DocConstantReasonRejected.MISSING_CHARACTERISTICS;
                case ReasonRejectedEnm.MISSING_OUTCOMES:
                    return DocConstantReasonRejected.MISSING_OUTCOMES;
                case ReasonRejectedEnm.NOT_CLINICAL_STUDY:
                    return DocConstantReasonRejected.NOT_CLINICAL_STUDY;
                case ReasonRejectedEnm.NOT_ENGLISH:
                    return DocConstantReasonRejected.NOT_ENGLISH;
                case ReasonRejectedEnm.NOT_TREAMENT_STUDY:
                    return DocConstantReasonRejected.NOT_TREAMENT_STUDY;
                case ReasonRejectedEnm.RELEVANT_MISCLASSIFIED_REFERENCE:
                    return DocConstantReasonRejected.RELEVANT_MISCLASSIFIED_REFERENCE;
                case ReasonRejectedEnm.STUDY_FITS_PROTOCOL_ADD_LATER:
                    return DocConstantReasonRejected.STUDY_FITS_PROTOCOL_ADD_LATER;
                case ReasonRejectedEnm.WRONG_COMPARISON:
                    return DocConstantReasonRejected.WRONG_COMPARISON;
                case ReasonRejectedEnm.WRONG_INTERVENTION:
                    return DocConstantReasonRejected.WRONG_INTERVENTION;
                case ReasonRejectedEnm.WRONG_NUMBER_PARTICIPANTS:
                    return DocConstantReasonRejected.WRONG_NUMBER_PARTICIPANTS;
                case ReasonRejectedEnm.WRONG_OUTCOME_STRATIFICATION:
                    return DocConstantReasonRejected.WRONG_OUTCOME_STRATIFICATION;
                case ReasonRejectedEnm.WRONG_OUTCOMES:
                    return DocConstantReasonRejected.WRONG_OUTCOMES;
                case ReasonRejectedEnm.WRONG_POPULATION:
                    return DocConstantReasonRejected.WRONG_POPULATION;
                case ReasonRejectedEnm.WRONG_PUBLICATION_DATE_CUTOFF:
                    return DocConstantReasonRejected.WRONG_PUBLICATION_DATE_CUTOFF;
                case ReasonRejectedEnm.WRONG_SETTING:
                    return DocConstantReasonRejected.WRONG_SETTING;
                case ReasonRejectedEnm.WRONG_STUDY_DESIGN:
                    return DocConstantReasonRejected.WRONG_STUDY_DESIGN;
                case ReasonRejectedEnm.WRONG_TIMING:
                    return DocConstantReasonRejected.WRONG_TIMING;
                default:
                    return string.Empty;
            }
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string ToEnumString(this ReasonRejectedEnm? instance)
        {
            if(null == instance) return string.Empty;
            return instance.Value.ToEnumString();
        }
    }

    public sealed partial class DocConstantReasonRejected : IEquatable<DocConstantReasonRejected>, IEqualityComparer<DocConstantReasonRejected>
    {
        public const string ABSTRACT_INSUFFICIENT_INFORMATION = "Abstract with Insufficient Information";
        public const string ANIMAL_STUDY = "Animal study";
        public const string DOES_NOT_MEET_PROTOCOL = "Does not meet protocol";
        public const string DUPLICATE_PUBLICATION = "Duplicate Publication";
        public const string ERRONEOUS_DATA = "Erroneous Data";
        public const string IN_VITRO_STUDY = "In vitro study";
        public const string MISSING_CHARACTERISTICS = "Missing Characteristic(s)";
        public const string MISSING_OUTCOMES = "Missing Outcome(s)";
        public const string NOT_CLINICAL_STUDY = "Not a Clinical Study";
        public const string NOT_ENGLISH = "Not English";
        public const string NOT_TREAMENT_STUDY = "Not a treatment Study";
        public const string RELEVANT_MISCLASSIFIED_REFERENCE = "Relevant misclassified reference";
        public const string STUDY_FITS_PROTOCOL_ADD_LATER = "Study fits protocol, to be possibly added later";
        public const string WRONG_COMPARISON = "Wrong Comparison";
        public const string WRONG_INTERVENTION = "Wrong Intervention";
        public const string WRONG_NUMBER_PARTICIPANTS = "Wrong Number of Participants";
        public const string WRONG_OUTCOME_STRATIFICATION = "Wrong Outcome Stratification";
        public const string WRONG_OUTCOMES = "Wrong Outcome(s)";
        public const string WRONG_POPULATION = "Wrong Population";
        public const string WRONG_PUBLICATION_DATE_CUTOFF = "Wrong Publication Date Cutoff";
        public const string WRONG_SETTING = "Wrong Setting";
        public const string WRONG_STUDY_DESIGN = "Wrong Study Design";
        public const string WRONG_TIMING = "Wrong Timing";
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private static List<string> _all;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> All => _all ?? (_all = typeof(DocConstantReasonRejected).GetFields(BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy).Where(fi => fi.IsLiteral && !fi.IsInitOnly).Select( fi => fi.GetRawConstantValue().ToString() ).OrderBy(n => n).ToList());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private readonly string Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private DocConstantReasonRejected(string ItemName = null)
        {
            ItemName = ItemName ?? string.Empty;
            Value = FirstOrDefault(ItemName) ?? ItemName;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool Contains(string name) => All.Any(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static string FirstOrDefault(string name) => All.FirstOrDefault(val => string.Equals(val, name, StringComparison.OrdinalIgnoreCase));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator DocConstantReasonRejected(string Val) => new DocConstantReasonRejected(Val);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static implicit operator string(DocConstantReasonRejected item) => item?.Value ?? string.Empty;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator DocConstantReasonRejected(ReasonRejectedEnm Val) => new DocConstantReasonRejected(Val.ToEnumString());
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static explicit operator ReasonRejectedEnm(DocConstantReasonRejected item)
        {
            Enum.TryParse<ReasonRejectedEnm>(item.ToString(), true, out var tryRet);
            return tryRet;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override string ToString() => Value;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantReasonRejected obj) => this == obj;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator ==(DocConstantReasonRejected x, DocConstantReasonRejected y) => DocTools.AreEqual(DocConvert.ToString(x), DocConvert.ToString(y));
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool Equals(DocConstantReasonRejected x, DocConstantReasonRejected y) => x == y;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static bool operator !=(DocConstantReasonRejected x, DocConstantReasonRejected y) => !(x == y);
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override bool Equals(object obj)
        {
            var ret = false;
            if(!(obj is DocConstantReasonRejected))
            {
                ret = false;
            }
            else
            {
                ret = this == (DocConstantReasonRejected) obj;
            }
            return ret;
        }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override int GetHashCode() => 17 * Value?.GetHashCode() ?? -1;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int GetHashCode(DocConstantReasonRejected obj) => obj?.GetHashCode() ?? -17;
    }
}
