//------------------------------------------------------------------------------
// <auto-generated>
//    This code is auto-generated by a T4 template. This class can be only customized modifying the corresponding partial class.
//    All other changes to this file will cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Dynamic;

using Services.Core;
using Services.Dto.internals;
using Services.Enums;

using ServiceStack;
using ServiceStack.Text;

using Typed;
using Typed.Notifications;
using Typed.Bindings;

using Xtensive.Orm;


namespace Services.Dto
{
    public abstract partial class MeanVariancesBase : Dto<MeanVariances>
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesBase() {}

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesBase(int id) : this()
        {
            if(id > 0) Id = id;
        }

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesBase(int? id) : this(DocConvert.ToInt(id)) {}

        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesBase(int? pId, bool isDummyParam) : this(DocConvert.ToInt(pId)) 
        {

        }




        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public void Deconstruct(bool isDummyParam)
        {

        }

        //Not ready until C# v8.?
        //[GeneratedCodeAttribute("T4", "1.0.0.0")]
        //public MeanVariancesBase With(int? pId = Id, ) => 
        //	new MeanVariancesBase(pId, isDummyParam);

    }


    public partial class MeanVariances : MeanVariancesBase, IReturn<MeanVariances>, IDto, ICloneable
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariances() => _Constructor();
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariances(int? id) : base(DocConvert.ToInt(id)) {}
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariances(int id) : base(id) {}
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariances(int? pId, bool isDummyParam) :
            base(pId, isDummyParam) { }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public static List<string> Fields => DocTools.Fields<MeanVariances>();

        private List<string> _Select;
        [ApiMember(Name = nameof(Select), Description = "The list of fields to include in the response", AllowMultiple = true, IsRequired = true)]
        [ApiAllowableValues("Includes", Values = new string[] {nameof(Created),nameof(CreatorId),nameof(Gestalt),nameof(Locked),nameof(Updated),nameof(Variances),nameof(VersionNo)})]
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override List<string> Select
        {
            get
            {
                if(null == this) return new List<string>();
                if(null == _Select)
                {

                    _Select = DocPermissionFactory.RemoveNonEssentialFields(Fields);

                }
                return _Select;
            }
            set
            {

                _Select = Fields;

            }
        }

        [Obsolete, ApiMember(Name = "VisibleFields", Description = "Deprecated. Use Select instead.", AllowMultiple = true)]
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public override List<string> VisibleFields { get => Select; set => Select = value; }


        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private List<string> _collections = new List<string>
        {
            nameof(Variances), nameof(Variances), nameof(VariancesCount), nameof(VariancesIds)
        };
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private List<string> collections { get { return _collections; } }


        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public object Clone() => this.Copy<MeanVariances>();

    }
    

    public partial class MeanVariancesSearchBase : Search<MeanVariances>
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public int? Id { get; set; }
        public List<int> VariancesIds { get; set; }
    }


    public partial class MeanVariancesSearch : MeanVariancesSearchBase
    {
    }

    public class MeanVariancesFullTextSearch
    {
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesFullTextSearch() {}
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        private MeanVariancesSearch _request;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public MeanVariancesFullTextSearch(MeanVariancesSearch request) => _request = request;
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public string fts { get => _request.FullTextSearch?.TrimAndPruneSpaces(); }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool isBool { get => (fts == "1" || fts == "0" || fts.ToLower() == "true" || fts.ToLower() == "false"); }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool ftsBool { get => DocConvert.ToBool(fts); }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public DateTime ftsDate { get => DocConvert.ToDateTime(fts); }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool isDate { get => ftsDate != DateTime.MinValue; }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool doCreated { get => true == _request.Select?.Any(v => DocTools.AreEqual(v, nameof(MeanVariances.Created))); }
        [GeneratedCodeAttribute("T4", "1.0.0.0")]
        public bool doUpdated { get => true == _request.Select?.Any(v => DocTools.AreEqual(v, nameof(MeanVariances.Updated))); }

        public bool doVariances { get => true == _request.Select?.Any(v => DocTools.AreEqual(v, nameof(MeanVariances.Variances))); }
    }


    public partial class MeanVariancesBatch : List<MeanVariances> { }


    [Route("/meanvariances/{Id}/{Junction}/version", "GET, POST")]
    [Route("/meanvariances/{Id}/{Junction}", "GET, POST, DELETE")]
    public class MeanVariancesJunction : MeanVariancesSearchBase {}



}
